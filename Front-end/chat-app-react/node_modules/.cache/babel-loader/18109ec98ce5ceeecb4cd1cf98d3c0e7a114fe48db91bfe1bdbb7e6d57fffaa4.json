{"ast":null,"code":"var _jsxFileName = \"E:\\\\Training\\\\DOTNET\\\\DOTNET_Examples\\\\SignalR_DotnetCore_ReactJS\\\\chat-app-react\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // const connection = new signalR.HubConnectionBuilder()\n    //   .withUrl('https://localhost:7229/chathub')\n    //   .withAutomaticReconnect()\n    //   .build();\n\n    var connection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:7229/chathub\", {\n      skipNegotiation: true\n    }).withAutomaticReconnect().build();\n    connection.on('ReceiveMessage', (user, message) => {\n      console.log(\"hiii\" + message);\n      setMessages(prevMessages => [...prevMessages, {\n        user,\n        message\n      }]);\n    });\n    connection.start().then(() => {\n      axios.get('https://localhost:7229/api/user') // Replace this with your endpoint to get the user's name\n      .then(response => setUser(response.data)).catch(error => console.error(error));\n    });\n    return () => {\n      connection.stop();\n    };\n  }, []);\n  const sendMessage = () => {\n    axios.post('https://localhost:7229/api/message', {\n      user,\n      message\n    }).then(() => setMessage('')).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"vgIXI70xT3U40yO1Naxws4REG+Q=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","signalR","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","user","setUser","message","setMessage","connection","HubConnectionBuilder","withUrl","skipNegotiation","withAutomaticReconnect","build","on","console","log","prevMessages","start","then","get","response","data","catch","error","stop","sendMessage","post","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/Training/DOTNET/DOTNET_Examples/SignalR_DotnetCore_ReactJS/chat-app-react/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport axios from 'axios';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // const connection = new signalR.HubConnectionBuilder()\r\n    //   .withUrl('https://localhost:7229/chathub')\r\n    //   .withAutomaticReconnect()\r\n    //   .build();\r\n\r\n      var connection = new signalR.HubConnectionBuilder()\r\n       .withUrl(\"https://localhost:7229/chathub\", {\r\n        skipNegotiation: true\r\n    }).withAutomaticReconnect()\r\n    .build();\r\n\r\n    connection.on('ReceiveMessage', (user, message) => {\r\n        console.log(\"hiii\"+message)\r\n      setMessages((prevMessages) => [...prevMessages, { user, message }]);\r\n    });\r\n\r\n    connection.start().then(() => {\r\n      axios.get('https://localhost:7229/api/user') // Replace this with your endpoint to get the user's name\r\n        .then((response) => setUser(response.data))\r\n        .catch((error) => console.error(error));\r\n    });\r\n\r\n    return () => {\r\n      connection.stop();\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    axios.post('https://localhost:7229/api/message', { user, message })\r\n      .then(() => setMessage(''))\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.user}: </strong>\r\n            {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}